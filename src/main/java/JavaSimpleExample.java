import com.mongodb.*;

import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class JavaSimpleExample {
    public static final String[] texts = {
            "Этот образ, поражающий свой душевной простотой и искренностью, по-настоящему трогает сердца читателей, и не случайно великий поэт придал ему столь красочные и выразительные черты доброты, скромности и, вместе с тем, силы духа.\n" +
                    " Пушкинская Татьяна, провинциальная барышня, живущая на лоне природы, в тиши и уединении, являет собой милый и с самых первых страниц притягательный своим меланхоличным очарованием образ. И лишь с дальнейшим ходом событий мы наблюдаем в этой уравновешенной и послушной девушке жаркую бурю страстей, пылающую огнем любовь, снедающую все ее существо.\n" +
                    " Ее переживания близки и понятны каждому, кому посчастливилось полюбить в своей жизни, и проницательный читатель может в полной мере осознать ту боль, доставленную снисходительным пренебрежением героя к ее отчаянному и поражающему своей чистотой признанию.\n" +
                    " Но, несмотря на крах своих надежд и мучительные страдания, Татьяна в глубине души благодарна равнодушному герою за полноту жизни и всплеск эмоций, которые он подарил ей своим губительным появлением. И лишь подлинное величие души и сила воли могли дать ему прощение за свою первую поруганную любовь, любовь, которая, увы, не прошла, а стала тайной и постоянно кровоточащей раной, невзирая на блеск и богатство успешного брака.\n" +
                    " И этот поразительный контраст внешнего спокойствия, затаенной боли и бурлящих в душе страстей чрезвычайно любим читателем так же, как и его великим автором.",

            " Человеческая речь – великий дар природы, но это вовсе не означает, что каждому от рождения присущ и талант общения. Ведь нельзя не согласиться с тем, что одно лишь умение говорить и жестикулировать не может сделать человека прекрасным собеседником. И чтобы добиться в искусстве общения высоких успехов, необходимо обладать необычайно тонким и безошибочным чутьем, недюжинным интеллектом и хорошей интуицией.\n" +
                    " Ошибочно полагает тот, кто ставит общение в зависимость от собственного монолога и, достигая известных высот в ораторском искусстве, совершенно искренне сетует на собеседника за отсутствие должного внимания, забывая о том, что общение – это, в первую очередь, умение слушать и слышать своего визави, уделяя его словам и жестам предельно уважительное внимание.\n" +
                    " И действительно, сложно назвать хорошим собеседником того, кто старается играть ведущую и даже авторитарную роль в любом диалоге, тогда как подлинное умение общаться всегда подразумевает деликатность и компромисс.\n" +
                    " Известно также, что отнюдь не всегда основной смысл разговора лежит на поверхности и произносится вслух. По-настоящему искусный диалог – это целый комплекс слов и жестов, мимики и взглядов. Овладеть мастерством общения может лишь проницательный человек, обладающий искренним желанием собственного совершенствования.\n" +
                    " Однако это вовсе не означает, что такие навыки общения доступны лишь самым опытным и пожилым собеседникам. Безупречному диалогу можно научиться также будучи эрудированным и прилежным читателем классической литературы, авторы которой слыли не только величайшими мастерами слова, но и истинными знатоками человеческой души.",

            "  Центральный образ романа Л. Н. Толстого «Война и мир», очаровательная и прелестная Наташа Ростова, стала своеобразным символом чистоты, нежности и бесконечной доброты. В ней соединились привлекательнейшие черты искренности, веселого нрава, патриотизма и необычайного дара распространять вокруг себя дружелюбие и любовь.\n" +
                    " В начале романа мы видим в Наташе лишь трогательную в своей милой непосредственности девочку, а затем с замиранием сердца следим за ее превращением из нескладного подростка в полную соблазнительного очарования барышню, притягивающую восхищенные взоры и вызывающую волнующие чувства даже у столь твердых и многое переживших как князь Андрей.\n" +
                    " Становление этой незаурядной личности вызывает живой интерес читателя. Сквозь призму трудных для России лет мы видим взрослеющую не по годам девушку, чья душа полна любви и сострадания к ближнему, для которой дружба, честь и правда – не пустые звуки. Наташа – это образ женщины высокого происхождения, близко воспринимающей беды своей родины. И не в пример своим сверстницам, чопорной Вере или жеманной Жюли, Наташа открыта для людских страданий, она тонко чувствует и сопереживает, она необычайно тонка и деликатна, и симпатии читателя всегда на ее стороне, сколь досадными ни показались бы ее ошибки и безрассудными поступки.\n" +
                    " Наташа Ростова – бесспорное украшение романа, ее образ передан автором необычайно живо и тонко, вызывая самые добрые и трепетные чувства к ее истинной женственности, природной веселости и чистой, всеобъемлющей любви.",

            " Размышляя о законах построения литературного произведения, мы неминуемо анализируем и личность главного героя, однако далеко не всегда этот персонаж является положительным, как произошло это и в комедии великого Гоголя.\n" +
                    " И действительно, главное лицо «Ревизора» - персона аморальная. Это погрязший в карточных долгах кутила, занимающий ничтожное положение в столице, однако не лишенный известного себялюбия и тщеславия. Оказавшись в счастливых для себя обстоятельствах, будучи принятым неискушенными провинциалами за высокий чин из Петербурга, он немедленно старается обратить ситуацию в свою пользу, чего и добивается с успехом.\n" +
                    " И при всей своей порочности и никчемности, это человек помогает автору обличить целый ряд продажных и насквозь пропитанных фальшью чиновников во главе с опытным и беспринципным вором, городничим. Эта свора жалких проходимцев, проживающих свой век в удовольствиях, купленных за взятки и открыто присвоенные государственные средства, в конце комедии терпит окончательное и бесповоротное поражение, и дальнейшая их участь подразумевает полное разоблачение и серьезные взыскания.\n" +
                    " Так Хлестаков, будучи лживым и эгоистичным вертопрахом, косвенно становится бичом в руках справедливости, наказующей недостойных государственных деятелей, и позитивная роль его в данном деянии очевидна: он вместе с автором и его читателями высмеивает порочную натуру обитателей этого города, позорящих высокое звание слуг народа.",

            " Свежий и чистый воздух, кристальная вода в реках, лазурное море, густые и зеленые леса и луга – трудно перечесть все природные красоты, дарящие человеку свою целебную силу, гармонию и отдохновение. Увы, сегодня все эти бесценные блага находятся в достаточно серьезной опасности, которая долгие годы зрела и создавалась неблагодарным человечеством.\n" +
                    " Привычка к безжалостной эксплуатации природы, бездумное и алчное использование ее ресурсов могут привести к всеобъемлющей катастрофе, которая безвозвратно поглотит все лучшее, что есть на земле, оставляя жестокому и столь недальновидному человеку лишь скудность бесплодной пустыни.\n" +
                    " К счастью, сегодня многочисленные общества охраны природы с готовностью принимают на себя заботы об окружающей среде, открыто борясь с теми, кто посягает на ее девственную чистоту. В наши дни многие предприятия стараются переходить на более щадящие для природы и энергосберегающие режимы работы, что существенно снизит опасность всяческих загрязнений.\n" +
                    " Однако это вовсе не означает, что роль каждого человека в деле защиты природы пренебрежительно мала. Напротив, чистота родного края – это, в первую очередь, достижение каждого его жителя. И разводя костры или разбрасывая мусор, не стоит ожидать, что последствия данного вреда будут устранены какими-либо чудесными силами или общими усилиями крупных международных организаций. Не стоит сетовать на загазованный воздух и загрязненные зеленые рекреации, стараясь при этом самоустраниться от этих проблем. Ведь охрана природы – это дело всех и каждого в отдельности, и желаемый порядок следует, прежде всего, начинать с самого себя.\n" +
                    " И тогда материнская доброта природы вновь заключит человека в свои щедрые объятия, от души одаривая его всеми своими благами. И к этому дню мы сможем дойти лишь общими усилиями, честным трудом и чистыми, бескорыстными помыслами."
    };

    private static final int[] age = {15, 16, 17, 18, 19, 20};
    private static final String[] lifestyle = new String[]{"Технарь", "Гуманитарий", "Гуманитарий", "Технарь", "Технарь"};
    private static final String[] englishLevel = new String[]{"Элементарный", "Свободный", "Самостоятельный", "Свободный", "Элементарный"};
    private static final String[] gender = new String[]{"М", "Ж", "Ж", "М", "М"};
    private static final String[] department = new String[]{"КНиИТ", "ИФИЖ", "ИФИЖ", "Физфак", "Мехмат"};

    public static void main(String[] args) throws UnknownHostException {
        dbTest();
        //countsTest();
    }

    private static void countsTest() {
        for (String text : texts) {
            System.out.println(sentencesCount(text) + " " + wordsCount(text));
        }
    }

    private static void dbTest() throws UnknownHostException {
        MongoClient client = new MongoClient("localhost", 27017);
        DB db = client.getDB("db");

        DBCollection table = db.getCollection("table");
        for (int i = 0; i < 5; i++) {
            table.insert(save(texts[i], age[i], lifestyle[i], englishLevel[i], gender[i], department[i]));
        }

        List<DBObject> criteries = new ArrayList<>();
        criteries.add(new BasicDBObject("age", new BasicDBObject("$gte", 16)));
        criteries.add(new BasicDBObject("age", new BasicDBObject("$lte", 18)));
        criteries.add(new BasicDBObject("sentencesCount", new BasicDBObject("$gte", 8)));
        DBObject criteria = new BasicDBObject("$and", criteries);

        DBCursor cursor = table.find(criteria);
        while (cursor.hasNext()) {
            DBObject next = cursor.next();
            System.out.println(
                    next.get("wordsCount") + "\t" +
                            next.get("sentencesCount") + "\t" +
                            next.get("age") + "\t" +
                            next.get("lifestyle") + "\t" +
                            next.get("englishLevel") + "\t" +
                            next.get("gender") + "\t" +
                            next.get("department"));
        }

        table.drop();
        //db.dropDatabase();
        client.close();
    }

    static DBObject save(String text, int age, String lifestyle, String englishLevel, String gender, String department) {
        DBObject object = new BasicDBObject();
        object.put("text", text);
        object.put("wordsCount", wordsCount(text));
        object.put("sentencesCount", sentencesCount(text));
        object.put("age", age);
        object.put("lifestyle", lifestyle);
        object.put("englishLevel", englishLevel);
        object.put("gender", gender);
        object.put("department", department);
        return object;
    }

    static int wordsCount(String s) {
        return s.split(" ").length;
    }

    static int sentencesCount(String s) {
        int count = 0;
        Set<Character> punct = new HashSet<>();
        punct.add('.');
        punct.add('!');
        punct.add('?');

        for (int i = 0; i < s.length(); i++) {
            while (i < s.length() && !punct.contains(s.charAt(i))) {
                ++i;
            }
            ++count;
        }

        return count;
    }
}
